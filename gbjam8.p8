pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
--start
game = {}

input={
	x=0,
	y=0
}

camera_pos={
	x=0,
	y=0
}

flags = {
	collision=0,
	spike=1,
	button=2,
	door=3,
	key=4,
	heart=5,
	portal=7
}

musics={
	title=0,
	pass_level=6,
	gameplay=7,
	credits=13,
	stop_sound=-1
}

sfxs = {
 spike = 0,
 walk  = 1,
 catch = 2,
 open_door = 3,
 button = 4,
 join = 18
}

function _init()
	show_menu()
end

function _update()
	game.update()
end

function _draw()
	game.draw()
end
-->8
--main menu
function show_menu()
	game.update = update_menu
	game.draw = draw_menu
	music(musics.title)
end

function update_menu()
	if btnp(❎) then
	 music(musics.stop_sound, 300)
  start_game()
	end
end

function draw_menu()
	cls()
	
	--gray background color
	rectfill(0,0,128,128,1)
	
	draw_title()
	
	print_centered("press x to start", 0, 10)
end

function draw_title()
	-- title: help
	spr(64,32,20,8,2)
	-- title: slime
	spr(96,24,40,10,2)
end
-->8
--levels

is_walking = false

function start_game()
 music(musics.gameplay)
	game.time = 0
	game.level = 1
	
	camera_pos.x=0
	camera_pos.y=0
	camera(camera_pos.x, camera_pos.y)
	game.scenes={
		{show=show_level1},
		{show=show_level2},
		{show=show_level3},
		{show=show_level4},
		{show=show_level5},
		{show=show_level6},
		{show=show_level7},
		{show=show_level8},
		{show=show_level9},
		{show=show_level10},
		{show=show_level11},
		{show=show_level_credits},
	}
 game.update = update_anim_level
	game.draw = draw_anim_level
end

function show_level1()
	add(slimes,new_slime(5*8,6*8,1, false))
	get_portals()
end

function show_level2()
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1, false))
 get_portals()
end

function show_level3()
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1, false))
 get_portals()
end

function show_level4()
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1, false))
 get_portals()
 get_doors()
end

function show_level5()
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1))
 get_portals()
 get_keys()
 get_doors()
end

function show_level6()
	add(slimes,new_slime(camera_pos.x+4*8,camera_pos.y+3*8,1))
 get_portals()
 get_keys()
 get_doors()
end

function show_level7()
	add(slimes,new_slime(camera_pos.x+4*8,camera_pos.y+3*8,1))
 get_portals()
 get_hearts()
end

function show_level8()
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1, false))
 get_portals()
 get_doors()
end

function show_level9()
	add(slimes,new_slime(camera_pos.x+4*8,camera_pos.y+3*8,1))
 get_portals()
 get_keys()
 get_doors()
 get_hearts()
end

function show_level10()
	add(slimes,new_slime(camera_pos.x+4*8,camera_pos.y+7*8,1))
 add(slimes,new_slime(camera_pos.x+11*8,camera_pos.y+5*8,1))
 get_portals()
 get_keys()
 get_doors()
end

function show_level11()
	add(slimes,new_slime(camera_pos.x+4*8,camera_pos.y+3*8,1))
 add(slimes,new_slime(camera_pos.x+11*8,camera_pos.y+3*8,1))
 get_portals()
 get_doors()
end

function show_level_credits()
 music(musics.credits)
	add(slimes,new_slime(camera_pos.x+5*8,camera_pos.y+6*8,1))
 get_portals()
end


function is_tile(x,y,type_tile)
	local tile=mget(x/8, y/8)
	return fget(tile, type_tile)
end

function input_walk()
	input.x=0
	input.y=0

 if btn(➡️) then input.x+=1 
	elseif btn(⬅️) then input.x-=1 
	elseif btn(⬇️) then input.y+=1
	elseif btn(⬆️) then input.y-=1 end
end

function verify_input()
		if input.x != 0 or input.y != 0 then
				local flag_walk=false
				for slime in all(slimes) do
					if not flag_walk then
						flag_walk = set_input_walk(slime)
					else
					 set_input_walk(slime)
					end
				end
				
				if flag_walk then
				 local out_button=false
			  for slime in all(slimes) do
				  if is_tile(slime.x,slime.y,flags.button) and
				     (slime.next_x != slime.x or slime.next_y != slime.y) then
				 		out_button=true
				  end
				 end
				 
				 if out_button then
					 for door in all(doors) do
					  local has_slime=false
					  for slime in all(slimes) do
				 		 if slime.next_x == door.x and
				 		     slime.next_y == door.y then
				 		   has_slime = true
				 		 end
			 		 end
			 		 
			 		 if not has_slime then
			 		  door.spt=49
				 		 mset(door.x/8,door.y/8,49)
			 		 end
			 		end
			 	end
				
					sfx(sfxs.walk)
					is_walking=true
				end
		end
end

function complete_level()

	local portals_count = #portals

	for slime in all(slimes) do
		if is_tile(slime.x,slime.y,flags.portal) then
			portals_count-=1
		end
	end
	
	if portals_count==0 then
		return true
	end
	
	return false
end

function reset_level()
 game.time=0
 
 portals={}
 reset_doors()
	slimes={}
 slimes_die={}
	reset_keys()
 reset_hearts()
	
 game.update = update_anim_level
	game.draw = draw_anim_level
end

function update_level()
	anim_portals()
	
	 if game.level == #game.scenes then
		 if slimes[1].x > (camera_pos.x+64) then
		  local x_offset = slimes[1].x-(camera_pos.x+64)
				camera(camera_pos.x+x_offset, camera_pos.y)
			end
	 end	

 if not is_walking then
 	if btnp(❎) and game.level < #game.scenes  then
	 	reset_level()
		end
 
	 input_walk()
	 anim_idle()
	 anim_die()
		
		verify_input()
		
 else
   anim_die()
 		is_walking=process_walk()
 		
 		if not is_walking then
 		
 		 for slime in all(slimes) do
 		 	process_fusion(slime)
 			end
 		
 		 if complete_level() then
 		 	next_level()
 		 end

 		 -- any slime on the spike
 		 local slimes_div={}
 		 for slime in all(slimes) do
 		  add(slimes_div,slime)
 		 end
 		 
 		 for slime in all(slimes_div) do
 		  if is_tile(slime.x,slime.y,flags.spike) then
 		 		divide(slime)
 		  end
 		 end
 		 
 		 -- after division, any slime on the spike
 		 for slime in all(slimes) do
 		  if is_tile(slime.x,slime.y,flags.spike) then
 		 		slime.spt=9
 		 		add(slimes_die,slime)
 		 		del(slimes,slime)
 		  end
 		 end
 		 
 		 for slime in all(slimes) do
 		 	process_fusion(slime)
 		 end
 		 
 		 -- any slime on the door
 		 for door in all(doors) do
 		 	local lock_door = true
		 		for slime in all(slimes) do
		  		if slime.x == door.x and
		 						slime.y == door.y then
		 					door.spt=20
		 					lock_door = false
	 		 		 mset(door.x/8,door.y/8,20)
	 		 	end
			 	end
		 		if lock_door then
 		 	 mset(door.x/8,door.y/8,49)
 		 	end
 		 end
 		 
 		 -- any slime on the button
 		 for slime in all(slimes) do
 		  if is_tile(slime.x,slime.y,flags.button) then
 		  	sfx(sfxs.button)
 		 		if #doors > 0 and doors[1].spt == 49 then
	 		 		sfx(sfxs.open_door)
	 		 	end
 		 		for door in all(doors) do
		 		 		 door.spt=20
		 		 		 mset(door.x/8,door.y/8,20)
 		 		end
 		  end
 		 end 		 
 		 
 		 -- any slime catch key
 		 for slime in all(slimes) do
 		  if is_tile(slime.x,slime.y,flags.key) then
 		 		sfx(sfxs.catch)
 		 		mset(slime.x/8,slime.y/8,20)
 		 		slime.has_key = true
 		  end
 		 end
 		 
 		 -- any slime catch heart
 		 for slime in all(slimes) do
 		  if is_tile(slime.x,slime.y,flags.heart) then
 		 		sfx(sfxs.catch)
 		 		mset(slime.x/8,slime.y/8,20)
 		 		slime.life += 1
 		  end
 			end
 		 
 		end
 end

end

function next_level()
 if game.level < #game.scenes then
 	music(musics.pass_level)
 end	
 	
 game.time=0
 game.level+=1
 
 portals={}
 reset_doors()
	slimes={}
	slimes_die={}
	reset_keys()
	reset_hearts()
 
 camera_pos.x+=128
 if (camera_pos.x/128 == 8) then
  camera_pos.x=0
  camera_pos.y+=128
 end
 camera(camera_pos.x, camera_pos.y)
 
 if game.level <= #game.scenes then
	 game.update = update_anim_level
		game.draw = draw_anim_level
 else
  show_final()
 end
end

function draw_level()
	cls()
	map()
	for slime in all(slimes) do
		spr(slime.spt,slime.x,slime.y)
	end
	
	for slime in all(slimes_die) do
		spr(slime.spt,slime.x,slime.y)
		if slime.spt > 12 then
		 del(slimes_die, slime)
		end
	end
	
	for slime in all(slimes) do
		palt(1,true)
		
		if slime.life%1 != 0 then
		 for i=0,slime.life-1,1 do
			 spr(34,slime.x-
			 							(flr(slime.life))*8+
			 							i*8+8*(flr(slime.life+1))/2.5-
			 							2.5,
			 							slime.y-8)
	 	end
			spr(spr(35,slime.x-
													(flr(slime.life+1))*8+
													(flr(slime.life+1))*8+8*slime.life/2.5-
													2.5,
													slime.y-8))
	 else
	 	for i=0,slime.life-1,1 do
			 spr(34,slime.x-
			 						(slime.life-1)*8+
			 						i*8+8*slime.life/2.5-
			 						2.5,
			 						slime.y-8)
	 	end
	 end
	 palt(1,false)
	end
	
	if game.level != #game.scenes then
		print("press x to reset level",camera_pos.x+5,camera_pos.y+5,7)
 else
  if slimes[1].y < camera_pos.y+68 then
  	print("this game was made by",camera_pos.x+20,camera_pos.y+15,7)
  	print("euler moises",camera_pos.x+170,camera_pos.y+15,7)
  	print("and",camera_pos.x+255,camera_pos.y+15,7)
  	print("felipe inoue",camera_pos.x+295,camera_pos.y+15,7)
  else
   print("...become a adventurous",camera_pos.x+15,camera_pos.y+75,7)
  	print("...i'll finally...",camera_pos.x+160,camera_pos.y+75,7)
  	print("my dream is near...",camera_pos.x+285,camera_pos.y+75,7)
  end
 end
end

function update_anim_level()
 game.time+=1
 if game.time == 30 then
  game.scenes[game.level].show()
  game.update = update_level
	 game.draw = draw_level
 end
end

function draw_anim_level()
 cls()
 rectfill(camera_pos.x,camera_pos.y,camera_pos.x+128,camera_pos.y+128,1)
 if game.level < #game.scenes then
		print_centered("level "..game.level, camera_pos.x, camera_pos.y)
	else
	 print_centered("credits", camera_pos.x, camera_pos.y)
	end
end
-->8
-- final
function show_final()
	game.update = update_final
	game.draw = draw_final
	
	camera(0,0)
end

function update_final()
	if btnp(❎) then
  show_menu()
	end
end

function draw_final()
	cls()
	
	--gray background color
	rectfill(0,0,128,128,1)
	
	print_centered("press x to menu", 0, 10)
end
-->8
-- tools
function print_centered(str, offset_x, offset_y)
  print(str, 
  64 - (#str * 2) + offset_x, 
  60 + offset_y,7) 
end
-->8
-- slime
slimes={}
slimes_die={}

function new_slime(x,y,life, has_key)
	local slime={}
	slime.x = x
	slime.y = y
	slime.life = life
	slime.has_key=has_key
	slime.next_x=0
	slime.next_y=0
	slime.spt=1
	return slime
end

function set_input_walk(slime)

	local next_x = slime.x+input.x*8
	local next_y = slime.y+input.y*8
	if not is_tile(next_x, next_y, flags.collision) and
	   not is_tile(next_x, next_y, flags.door) then
		slime.next_x = next_x
		slime.next_y = next_y
		
		return true
	elseif is_tile(next_x, next_y, flags.door) and
	       slime.has_key then
	 sfx(sfxs.open_door)
		del(slimes, slime)
		mset(next_x/8, next_y/8, 20)
		for door in all(doors) do
		 if door.x == next_x and
		    door.y == next_y then
		    add(doors_del, door)
		    del(doors, door)
		 end
		end

		return false
	end
	
	slime.next_x = slime.x
	slime.next_y = slime.y
	
	return false
end

function process_fusion(slime)
 for slm in all(slimes) do
  if slm != slime then
   if slm.x == slime.x and
      slm.y == slime.y then
      sfx(sfxs.join)
      slm.life+=slime.life
      if not slm.has_key then
      	slm.has_key = slime.has_key
      end
      del(slimes,slime)
   end
  end
 end
end

function divide(slime)
	sfx(sfxs.spike)
	
	local has_key = false
	if slime.has_key then
	 has_key = true
	end
	
	local life1=flr(slime.life)
	local life2=slime.life-life1
	
	life1=life1/2
	life2=life2+life1
	
 if (slime.life >= 1) then
  if input.x != 0 then
   if (is_tile(slime.x,slime.y+1*8,flags.collision) and
      is_tile(slime.x,slime.y-1*8,flags.collision)) then
      if input.x > 0 then
      	add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
      	add(slimes,new_slime(slime.x-1*8, slime.y, life2, has_key))
      else
       add(slimes,new_slime(slime.x+1*8, slime.y, life2, has_key))
      	add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
      end
   elseif is_tile(slime.x,slime.y-1*8,flags.collision) and
          is_tile(slime.x+1*8,slime.y,flags.collision) then
      add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
   elseif is_tile(slime.x+1*8,slime.y,flags.collision) and 
          is_tile(slime.x,slime.y+1*8,flags.collision) then
      add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   elseif is_tile(slime.x,slime.y+1*8,flags.collision) and
          is_tile(slime.x-1*8,slime.y,flags.collision) then
      add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   elseif is_tile(slime.x-1*8,slime.y,flags.collision) and
          is_tile(slime.x,slime.y-1*8,flags.collision) then
      add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
   elseif is_tile(slime.x,slime.y+1*8,flags.collision) then
    if input.x > 0 then
    	add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
    else
     add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
    end
	  	add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   elseif is_tile(slime.x,slime.y-1*8,flags.collision) then 
	  	if input.x > 0 then
    	add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
    else
     add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
    end
    add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
   else
	   add(slimes,new_slime(slime.x, slime.y+1*8, life1, has_key))
	  	add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   end
  elseif input.y != 0 then
			if (is_tile(slime.x+1*8,slime.y,flags.collision) and
      is_tile(slime.x-1*8,slime.y,flags.collision)) then
	   if input.y > 0 then
	    add(slimes,new_slime(slime.x, slime.y+1*8, life1, has_key))
	    add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
	   else
	    add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
	    add(slimes,new_slime(slime.x, slime.y-1*8, life1, has_key))
	   end
   elseif is_tile(slime.x,slime.y-1*8,flags.collision) and
          is_tile(slime.x+1*8,slime.y,flags.collision) then
      add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
   elseif is_tile(slime.x+1*8,slime.y,flags.collision) and 
          is_tile(slime.x,slime.y+1*8,flags.collision) then
      add(slimes,new_slime(slime.x-1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   elseif is_tile(slime.x,slime.y+1*8,flags.collision) and
          is_tile(slime.x-1*8,slime.y,flags.collision) then
      add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y-1*8, life2, has_key))
   elseif is_tile(slime.x-1*8,slime.y,flags.collision) and
          is_tile(slime.x,slime.y-1*8,flags.collision) then
      add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
      add(slimes,new_slime(slime.x, slime.y+1*8, life2, has_key))
   elseif is_tile(slime.x+1*8,slime.y,flags.collision) then
   	if input.y > 0 then
	    add(slimes,new_slime(slime.x, slime.y+1*8, life1, has_key))
   	else
	    add(slimes,new_slime(slime.x, slime.y-1*8, life1, has_key))
   	end
   		add(slimes,new_slime(slime.x-1*8, slime.y, life2, has_key))
   elseif is_tile(slime.x-1*8,slime.y,flags.collision) then
   	if input.y > 0 then
	    add(slimes,new_slime(slime.x, slime.y+1*8, life1, has_key))
   	else
	    add(slimes,new_slime(slime.x, slime.y-1*8, life1, has_key))
   	end
   		add(slimes,new_slime(slime.x+1*8, slime.y, life2, has_key))
   else
    add(slimes,new_slime(slime.x+1*8, slime.y, life1, has_key))
  		add(slimes,new_slime(slime.x-1*8, slime.y, life2, has_key))
   end
  end
  del(slimes,slime)
 else
  slime.spt=9
 	add(slimes_die,slime)
 	del(slimes,slime)
 end
end

function process_walk()

	local is_finish = true

	for slime in all(slimes) do
		if slime.x>slime.next_x then 
			slime.x-=1 
			is_finish = false
		elseif slime.x<slime.next_x then 
			slime.x+=1
			is_finish = false
		elseif slime.y>slime.next_y then 
			slime.y-=1 
			is_finish = false
		elseif slime.y<slime.next_y then 
			slime.y+=1 
			is_finish = false
		end
		
		anim_walk(slime)		
	end

	if is_finish then
	 return false
	end
	
	return true
	
end

function anim_idle()
	for slime in all(slimes) do
	 if not slime.has_key then
	 	slime.spt=1
	 else
	  slime.spt=5
	 end
	end
end

function anim_walk(slime)
	slime.spt+=0.5
	if not slime.has_key then
		if slime.spt > 4 then
	 	slime.spt=1
	 end
	else
	 if slime.spt > 9 then
	  slime.spt=5
	 end
	end
end

function anim_die()
	for slime in all(slimes_die) do
	 slime.spt+=0.5
	end
end
-->8
--portal
portals={}

function new_portal(x,y)
	local portal={}
	portal.x = x
	portal.y = y
	portal.spt=17
	return portal
end

function get_portals()
	for i=camera_pos.x,camera_pos.x+128,8 do
		for j=camera_pos.y,camera_pos.y+128,8 do
		 if is_tile(i,j,flags.portal) then
		 	add(portals,new_portal(i,j))
		 end
		end
	end
end

function anim_portals()
	for p in all(portals) do
	 p.spt+=0.2
	 if p.spt > 19 then
	  p.spt=17
	 end
	 mset(p.x/8,p.y/8,flr(p.spt))
	end
end
-->8
--door
doors={}
doors_del={}

function new_door(x,y)
	local door={}
	door.x = x
	door.y = y
	door.spt=49
	return door
end

function reset_doors()
 for door in all(doors) do
  mset(door.x/8,door.y/8,49)
 end
 for door in all(doors_del) do
  mset(door.x/8,door.y/8,49)
 end
 doors={}
 doors_del={}
end

function get_doors()
	for i=camera_pos.x,camera_pos.x+128,8 do
		for j=camera_pos.y,camera_pos.y+128,8 do
		 if is_tile(i,j,flags.door) then
		 	add(doors,new_door(i,j))
		 end
		end
	end
end

-->8
--key
keys={}

function new_key(x,y)
	local key={}
	key.x = x
	key.y = y
	key.spt=50
	return key
end

function reset_keys()
 for key in all(keys) do
  mset(key.x/8,key.y/8,50)
 end
 keys={}
end

function get_keys()
	for i=camera_pos.x,camera_pos.x+128,8 do
		for j=camera_pos.y,camera_pos.y+128,8 do
		 if is_tile(i,j,flags.key) then
		 	add(keys,new_key(i,j))
		 end
		end
	end
end
-->8
--heart
hearts={}

function new_heart(x,y)
	local heart={}
	heart.x = x
	heart.y = y
	heart.spt=34
	return heart
end

function reset_hearts()
 for heart in all(hearts) do
  mset(heart.x/8,heart.y/8,34)
 end
 hearts={}
end

function get_hearts()
	for i=camera_pos.x,camera_pos.x+128,8 do
		for j=camera_pos.y,camera_pos.y+128,8 do
		 if is_tile(i,j,flags.heart) then
		 	add(hearts,new_heart(i,j))
		 end
		end
	end
end
__gfx__
00000000000000000000000000000000000990000000000000000000000000000009900000000000000000000000000000000000000000000000000000000000
00000000000990000000000000099000009999000009900000000000000990000099990000099000000000000000000090000009000000000000000000000000
00700700009999000000000000999900009999000099990000000000009999000098990000999900000000000900009000000000000000000000000000000000
00077000099999900009900009999990001991000998999000099000099899900019818009999990009999000000000000000000000000000000000000000000
00077000091991900999999009199190009999000919818009989990091981800098980009199190001991000009900000000000000000000000000000000000
00700700099999909199991909999990009999000998989091898819099898900099990009999990009999000000000000000000000000000000000000000000
00000000009999009999999900999900000990000099990099989899009999000009900000999900000000000900009000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000090000009000000000000000000000000
00000000111111111111111111111111111111111111111111111999111111111111111100000000000000000000000000000000000000000000000000000000
00000000118888111188881111111111111111119999999119991999119999999999991100000000000000000000000000000000000000000000000000000000
00000000181881811818818111171117111111119999999119991999191999999999919100000000000000000000000000000000000000000000000000000000
00000000188798811889788111771177111111119999999119991999199199999999199100000000000000000000000000000000000000000000000000000000
00000000188978811887988117771777111111111111111119991111199911111111999100000000000000000000000000000000000000000000000000000000
00000000181881811818818177777777111111119999199919991999199911999911999100000000000000000000000000000000000000000000000000000000
00000000118888111188881111111111111111119999199919991999199919199191999100000000000000000000000000000000000000000000000000000000
00000000111111111111111111111111111111119999199919991999199919911991999100000000000000000000000000000000000000000000000000000000
00000000111111111111111111111111111111119999999199919991199919911991999100000000000000000000000000000000000000000000000000000000
00000000117777111177177111771771117717719999999199919991199919199191999100000000000000000000000000000000000000000000000000000000
00000000177777711788788717887117171171179999999199919991199911999911999100000000000000000000000000000000000000000000000000000000
00000000177777711788888717888117171111171111111199919991199911111111999100000000000000000000000000000000000000000000000000000000
00000000177777711788888717888117171111179999199999911111199199999999199100000000000000000000000000000000000000000000000000000000
00000000177777711178887111788171117111719999199999919991191999999999919100000000000000000000000000000000000000000000000000000000
00000000117777111117871111178711111717119999199999919991119999999999991100000000000000000000000000000000000000000000000000000000
00000000111111111111711111117111111171111111111111119991111111111111111100000000000000000000000000000000000000000000000000000000
00000000111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000117777111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000177777711991111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000177777719119111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000171777719119999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000171777719119119100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000177777711991111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000177777711111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19911111199111111999999999911111199111111111111119999999999111110000000000000000000000000000000000000000000000000000000000000000
99998111999981119999999999998111999911111111111199999999999911110000000000000000000000000000000000000000000000000000000000000000
99998811999988119999999999998811999981111111111199999888999981110000000000000000000000000000000000000000000000000000000000000000
99998811999988119999999999988811999981111111111199998111899981110000000000000000000000000000000000000000000000000000000000000000
99998811999988119999988888888111999981111111111199999111999981110000000000000000000000000000000000000000000000000000000000000000
99999999999988119999881111111111999981111111111199999999999981110000000000000000000000000000000000000000000000000000000000000000
99999999999988119999999111111111999981111111111199999999999981110000000000000000000000000000000000000000000000000000000000000000
99999999999988119999999811111111999981111111111199999999999881110000000000000000000000000000000000000000000000000000000000000000
99999999999988119999888811111111999981111111111199998888888811110000000000000000000000000000000000000000000000000000000000000000
99998888999988119999911111111111999981111111111199998111111111110000000000000000000000000000000000000000000000000000000000000000
99998888999988119999999999911111999999999991111199998111111111110000000000000000000000000000000000000000000000000000000000000000
99998811999988119999999999998111999999999999811199998111111111110000000000000000000000000000000000000000000000000000000000000000
99998811999988119999999999998811999999999999881199998111111111110000000000000000000000000000000000000000000000000000000000000000
19988811199881111999999999988811199999999998881119988111111111110000000000000000000000000000000000000000000000000000000000000000
11188111118811111188888888888111118888888888811111881111111111110000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000
11999999999111111991111111111111111119999911111119911111111991111999999999911111000000000000000000000000000000000000000000000000
19999999999911119999111111111111111999888999111199991111119999119999999999998111000000000000000000000000000000000000000000000000
99999999999981119999811111111111119998888899911199999111199999819999999999998811000000000000000000000000000000000000000000000000
99998888999881119999811111111111119998999899981199999911999999819999999999988811000000000000000000000000000000000000000000000000
99999888888811119999811111111111111997797799881199999999999999819999988888888111000000000000000000000000000000000000000000000000
99999911111111119999811111111111111177181778811199999999999999819999881111111111000000000000000000000000000000000000000000000000
19999999111111119999811111111111111177181778111199999999999999819999999111111111000000000000000000000000000000000000000000000000
11899999991111119999811111111111111197787798111199998999989999819999999811111111000000000000000000000000000000000000000000000000
11118999999111119999811111111111111999989999111199998199889999819999888811111111000000000000000000000000000000000000000000000000
11111199999911119999811111111111111999989999811199998118819999819999911111111111000000000000000000000000000000000000000000000000
19911119999981119999999999911111111998889999811199998111119999819999999999911111000000000000000000000000000000000000000000000000
99999999999981119999999999998111111998889999811199998111119999819999999999998111000000000000000000000000000000000000000000000000
99999999999881119999999999998811111999989999811199998111119999819999999999998811000000000000000000000000000000000000000000000000
19999999998881111999999999988811111199999998811119988111111998811999999999988811000000000000000000000000000000000000000000000000
11888888888811111188888888888111111118888888111111881111111188111188888888888111000000000000000000000000000000000000000000000000
11111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414171515151515151515181414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414161123141414141418162414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414161414141315141131162414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414161416241414141528262414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414172525252525252525282414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
__gff__
0000000000000000000000000000000000808002000101010100000000000000000420000001010101000000000000000008100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414171515151515151515181414141414141715151515151515151814141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141715151515151515181414141414141414141414141414141414141414141414161414141414141518261414141414141614141414141414112614141414141414141414141414141414141414
1414141715151515151515151814141414141417151515151515151518141414141414171515151515151515181414141414141614141414141421261414141414141417151515151515151518141414141414161414131414321426261414141414141614141413151414262614141414141417151515151515151518141414
1414141614141414141414142614141414141416141414141414141126141414141414161414141413141411261414141414141614141413141425261414141414141416141414141314141826141414141414161417141814131426261414141414141614161414141414262614141414141416211314141414141826141414
1414141614141414141411142614141414141416141414141314142526141414141414161314141414142525261414141414141614141414141431121414141414141416141414143214311126141414141414161314211413141426261414141414141614131422141414262614141414141416141414131514311126141414
1414141614141414141414142614141414141416141414141414141126141414141414161414141413141411261414141414141614141414141425261414141414141416141414141314142826141414141414161427142814142525261414141414141614141414141314262614141414141416142614141414252826141414
1414142725252525252525252814141414141427252525252525252528141414141414272525252525252525281414141414141614141414141414261414141414141427252525252525252528141414141414161414131414141425261414141414141614141414142614262614141414141427252525252525252528141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142725252525252525281414141414141414141414141414141414141414141414162714141426143111261414141414141611251314141414112614141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414272525252525252525281414141414142725252525252525252814141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141715151515151515151814141414141417151515151515151518141414141414171515151515151515181414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141614141614141313182614141414141416131316161616161126141414141414161414141416141414261414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414
1414141614141314131432262614141414141416141413141413163126141414141414161614141416141414261414141414142525252525252525252514141414141425252525252525252525251414141414252525252525252525251414141414141425252525252525141414141414141414141414141414141414141414
1414141614221614251413262614141414141416141316141414141426141414141414161614141431141414261414141414142514141414141414142525252525252525141414141414141414252525252525251414141414141414252525252525252525141414141425141414141414141414141414141414141414141414
1414141614141314141325262614141414141416141413321413141426141414141414161614143113311414261414141414142514141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141425141414141414141414141414141414141414141414
1414141614141314141414262614141414141416141414141326141426141414141414161614141431211414261414141414142514141414141414142525252525252525141414141414141414252525252525251414141414141414252525252525252525141414141425141414141414141414141414141414141414141414
1414141631141414131414262614141414141416141513141413141426141414141414161614141426141414261414141414142525252525252525252514141414141425252525252525252525251414141414252525252525252525251414141414141425141414141425141414141414141414141414141414141414141414
1414141611262114141431112614141414141416311125252526131326141414141414162711251126112511261414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141425141414141425141414141414141414141414141414141414141414
1414142725252525252525252814141414141427252525252525252528141414141414272525252525252525281414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141425141414141425141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142525252525252525252514141414141425252525252525252525251414141414252525252525252525251414141414141425141414141425141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142514141414141414142514141414141425141414141414141414251414141414251414141414141414251414141414141425141414141425141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142514141414141414142525252525252525141414141414141414252525252525251414141414141414252525252525252525141414141425141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142514141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141425141414141414141414141414141414141414141414
1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414142525112525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525141414141414141414141414141414141414141414
__sfx__
000100001b0701b070000000604006040060001a0701a070000000504005040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001a6201c62020620256202a6202f6203262034620376203862000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200001245012450000002145021450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00040000243502465015350156501a3001a3000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200003125031250000000000033250332500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011200003c7323c71234732347123773237712307323071234732347122b7322b712307323071228732287122b7322b712247322471228732287121f7321f71224732247121c7321c7121f7321f7121873218712
011200003b7323b712337323371238732387122f7322f71233732337122c7322c7122f7322f71227732277122c7322c71223732237122773227712207322071223732237121b7321b71220732207121773217712
0112000018357183571834718347183371833718327183271f3571f3571f3471f3471d3571d3571d3471d3471c3571c3571c3471c3471c3371c3371c3271c3271a3571a3571a3471a3471a3371a3371a3271a327
011200001b3571b3571b3471b3471b3371b3371b3271b327203572035720347203472033720337203272032720317203172031720317203172031720317203172031720317203172031720317203172031720317
011200001b3571b3571b3471b3471b3371b3371b3271b3271b3171b3171b3171b3171b3171b3171b3171b31723357233572334723347233372333723327233272331723317233172331723317233172331723317
0108000021252212321f2521f2321e2521e2322625226242262322622226212000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010800001e2521e2321c2521c2321a2521a2321e2521e2421e2321e2221e212000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000000f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220e42000000000000000000000000000e420000000e42000000000000000000000000000000000000
011000000f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f4220f42210420000000000000000000000000010420000001042000000000000000000000000000000000000
011000002462318615000000000000000000000000000000246231861500000000000000000000000000000024623186150000000000246000000024600000002462318615000000000024600000000000000000
01100000277522773222752227321e7521e7321b7521b7521b7421b7421b7321b7321b7221b7221b7121b71200000000000000000000000000000000000000000000000000000000000029752297422973229722
011000002a7522a732277522773222752227321e7521e7521e7421e7421e7321e7321e7221e7221e7121e71200000000000000000000000000000000000000000000000000000000000026752267422673226722
011000002a7522a7322e7522e7323275232732337523373236752367323a7523a7323e7523e7323f7513f7523f7423f7423f7323f7323f7223f7223f7123f7123f7123f7123f7123f7123f7123f7120000000000
000100000577005770057500b7400b7400b7501177011770117501a7401a7401a7500000000000000000000000000000001b7001c7001c7001c7001c7001c7001c7001c7001c7001c7001c7001d7001d7001c700
002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
013000001344213422134120e4420e4220e4121344213422134120e4420e4220e4121344213422134120e4420e4220e4121344213422134120e4420e4220e4120040000400004000040000400004000000000000
0130000023532235121f5321f5121a5321a51223532235121f5321f5121a5321a51223532235121f5321f5121a5321a51223532235121f5321f5121a5321a5120000200002000000000000000000000000000000
01300000000000000000000000000000000000000000000000000000000000000000000000000000000000001a5001a50000000000000000000000260522a0520000000000000000000000000000000000000000
013000002b0522b0322b0122b0022b0522d0522f0522f0322f012240022f052300523205232032320123000232052300522f0522f0322f012240022f0522d0520000000000000000000000000000000000000000
013000001044210422104120b4420b4220b4121044210422104120b4420b422104121544215422154121044210422104121544215422154121044210422104120040000400004000040000400004000000000000
01300000235322351220532205121c5321c512235322351220532205121c5321c51221532215121c5321c512185321851221532215121c5321c51218532185121800218002180001800000000000000000000000
013000002c0522c0322c012240002905228052260522603226012240002f0522f052300513003230012300023205232032300523003230022300522f0522d0520000000000000000000000000000000000000000
013000000e4420e4220e4120944209422094120e4420e4220e4120944209422094120e4420e4220e4120944209422094120e4420e4220e4120944209422094120040000400004000040000400004000000000000
0130000021532215121e5321e5121a5321a51221532215121e5321e5121a5321a51221532215121e5321e5121a5321a51221532215121e5321e5121a5321a5121800218002180000000000000000000000000000
013000002a0522a0322a012240002a05227052260522603226012240002a0522b0512d0522d0322d0123000232052300322d0522a032270222605225052260520000000000000000000000000000000000000000
013000002b0522b0522b0422b0422b0322b0322b0222b0222b0120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
013000001344213422134120e4420e4220e4121344213422134120e4420e4220e4120c4420c4220c4121344213422134120c4420c4220c4121344213422134120040000400004000040000400004000000000000
0130000023532235121f5321f5121a5321a51223532235121f5321f5121a5321a5121f5321f5121b5321b51218532185121f5321f5121b5321b51218532185120000200002000000000000000000000000000000
__music__
01 05424344
00 06424344
00 05074344
00 06084344
00 05074344
02 06094344
00 0a0b4344
01 0c500e44
00 0d420e44
00 0c0f0e44
00 0d100e44
00 0c0f0e44
02 0d110e44
01 13141615
00 13141715
00 13181a19
00 131b1d1c
02 131f1e20

